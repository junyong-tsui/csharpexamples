1系统定义委托为什么一般用
		   a Action及Action的泛型版本
		   b Function及Function的泛型版本?
   
        避免用户定义过多的委托，这些委托可以绑定的方法可能是相同的,这样会造成委托含义的不清楚。
所以一般使用泛型来定义委托。这样会避免委托类型爆炸。


2事件：
         概念：
		     1> 官方定义：事件其实是事件源通知关心事件源的这样一个机制。
			
			 2>.net里面事件实现为发布订阅模式：.net里面委托的一个特殊实例。每定义一个事件，会定义一个私有的委托变量，add,remove对委托的
	添加和移除。其实add,remove背后用的是委托的combine和remove方法。
	         
			 3>.net里面的说事件是委托的一个特殊实例。这个特殊体现在：
			       a委托只能再定义事件类的内部进行‘=’赋值和call调用 =》安全
		           b外部只能通过+=，-=注册或者取消
				主要是为了安全考虑

	    与委托比较:
		     委托是一个类，事件是一个机制(.net里面事件其实就是委托的一个特殊实例),从这个角度而言
		二者其实没有可比性

3发布订阅模式
       
	   概念：发布者通知订阅者订阅内容的机制。发布者不需要关心有多少个订阅者，订阅者是什么类型的，它只需要
    在发布内容的时候，通知下订阅者。订阅者也不关心发布者的情况，它只需要知道订阅者有我订阅的内容就可以了。
	        
			=》意味着发布者和订阅者应该是完全解耦的，至于通知机制应该引入组件来完成。比如.net通过委托
	来充当这个通知的中介，而这里自己也实现了一个中介ObserverManager。
