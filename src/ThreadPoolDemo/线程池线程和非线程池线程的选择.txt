3、线程池（使用熟练）、工作任务（会用）、并行计算(知道就行了)

	创建线程： 1+1=2；

	线程切换消耗资源,cpu在切换线程的时候，需要把当前线程执行的状态保持到寄存器里面去。
			线程创建非常消耗资源。线程创建非常慢，占用大量的内存空间。每个线程最少1M内存开销。
			
	线程池：提高了线程的利用率，非常适合工作任务非常小，而且又需要使用单独的线程来解决的
	问题。
	
	
	什么时候用线程池？什么时候用手动创建线程？
	1、能用线程池的就用线程池，处理顺序不确定。
	2、我们想手动关闭线程的话那么必须手动创建线程。 Abort（）   Join（）
	3、我们需要对线程池的线程的优先级做设置的情景下，只能使用手动创建线程。
	4、如果执行的线程执行时间特别长。线程池：适合做大量小运算。
	
	
	
	
	线程池中最大的线程数：1024   默认设置是最大1000个。
	最小的线程数是4， 默认是4个（根据机器的cpu不同，而不同）
	
	1核心： 255个线程    4*255=1000
